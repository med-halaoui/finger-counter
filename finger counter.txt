import cv2
import mediapipe as mp
import time

import numpy as np
from mediapipe.python.solutions.hands import Hands

time.sleep(2.0)
current_key_pressed = set()

mp_draw=mp.solutions.drawing_utils
mp_hand=mp.solutions.hands


tipIds=[4,8,12,16,20]

video=cv2.VideoCapture(0)

with mp_hand.Hands(min_detection_confidence=0.5,
               min_tracking_confidence=0.5) as hands:
    while True:
        keyPressed = False
        break_pressed=False
        accelerator_pressed=False
        key_count=0
        key_pressed=0
        ret,image=video.read()
       # print(np.shape(image))
        image=cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image.flags.writeable=False
        results=hands.process(image)
        image.flags.writeable=True
        image=cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
        lmList = []
        if results.multi_hand_landmarks:
            for hand_landmark in results.multi_hand_landmarks:
                myHands = results.multi_hand_landmarks[0]
                for [id, lm] in enumerate(myHands.landmark):
                    h, w, c = image.shape
                    cx, cy = int(lm.x * w), int(lm.y * h)
                    lmList.append([id, cx, cy])
                mp_draw.draw_landmarks(image, hand_landmark, mp_hand.HAND_CONNECTIONS)
        fingers = []
        if len(lmList) != 0:
            if lmList[tipIds[0]][1] > lmList[tipIds[0] - 1][1]:    # tipIds[0] , the 0 for thumb number and the [1] for the horizontale coordinates
                fingers.append(1)
            else:                                                   # lmList[tipIds[id]][a] cuz lmList.append([id, cx, cy]) so the 1st is the id number , 2nd is the horizontale coordinates , 3rd is the verticale ones
                fingers.append(0)
            for id in range(1, 5):
                if lmList[tipIds[id]][2] < lmList[tipIds[id] - 2][2]:   # tipIds[id] , the id is the number for each rest fingers  and the [2] for the verticale coordinates
                    fingers.append(1)
                else:
                    fingers.append(0)
            total = fingers.count(1)    # it count how many fingers are showen in the picture

            #print("total figers is : ", total)
            cv2.rectangle(image, (570, 330), (500, 425), (0, 255, 0), cv2.FILLED)
            cv2.putText(image, str(total) , (510, 390), cv2.FONT_HERSHEY_SIMPLEX,
                        2, (255, 0, 0), 5)

        cv2.imshow("Frame", image)
        k = cv2.waitKey(1)
        if k == ord('q'):
            break

print (np.shape(image))
video.release()
cv2.destroyAllWindows()